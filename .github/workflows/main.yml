name: Build amneziawg Packages for x86_64

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up OpenWRT SDK
      run: |
        wget https://downloads.openwrt.org/releases/23.05.3/targets/x86/64/openwrt-sdk-23.05.3-x86-64_gcc-8.4.0_musl.Linux-x86_64.tar.xz
        tar -xf openwrt-sdk-23.05.3-x86-64_gcc-8.4.0_musl.Linux-x86_64.tar.xz
        mv openwrt-sdk-23.05.3-x86-64_gcc-8.4.0_musl.Linux-x86_64 sdk

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses5-dev gawk git ccache gettext zlib1g-dev libssl-dev xsltproc wget unzip python3

    - name: Clone the package repositories and dependencies
      run: |
        git clone https://github.com/rakodin/awg-openwrt
        cp -r awg-openwrt/amneziawg-tools sdk/package/
        cp -r awg-openwrt/kmod-amneziawg sdk/package/
        cp -r awg-openwrt/luci-proto-amneziawg sdk/package/
        cp awg-openwrt/feeds.conf.default sdk/
        cd sdk
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Setup config with AWG and dependencies
      run: |
        cd sdk
        wget https://downloads.openwrt.org/releases/23.05.3/targets/x86/64/config.buildinfo -O .config
        echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
        echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
        echo "CONFIG_PACKAGE_luci-proto-amneziawg=y" >> .config
        echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20=m" >> .config
        echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=m" >> .config
        echo "CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=m" >> .config

        make defconfig

    - name: Build tools and toolchain
      run: |
        cd sdk
        make tools/install -i -j $(nproc)
        make toolchain/install -i -j $(nproc)

    - name: Compile kernel module
      run: |
        cd sdk
        make target/linux/compile -i -j $(nproc) V=s
        VERMAGIC=$(cat ./build_dir/target-*/linux-*/linux-*/.vermagic)
        VERMAGIC_EXPECTED="5.10.176"  # Replace this with the correct expected vermagic value
        if [ "$VERMAGIC" != "$VERMAGIC_EXPECTED" ]; then
          echo Vermagic mismatch: $VERMAGIC, expected $VERMAGIC_EXPECTED
          exit 1
        fi

    - name: Configure and build packages
      run: |
        cd sdk
        make package/amneziawg-tools/compile V=s
        make package/kmod-amneziawg/compile V=s
        make package/luci-proto-amneziawg/compile V=s

    - name: Archive build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: amneziawg-packages
        path: |
          sdk/bin/packages/x86_64/base/amneziawg-tools*.ipk
          sdk/bin/packages/x86_64/base/kmod-amneziawg*.ipk
          sdk/bin/packages/x86_64/base/luci-proto-amneziawg*.ipk
